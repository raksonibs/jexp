import java.util.Iterator;

public interface GraphADT<T>
{
   /** Adds a vertex to this graph, associating object with vertex. */
   public void addVertex (T vertex);
   
   public Iterator vertices();
   
   public Iterator edges();
   
   public int numVertices();
   
   public int numEdges();

   /** Removes a single vertex with the given value from this graph. */
   public void removeVertex (T vertex);

   /** Inserts an edge between two vertices of this graph. */
   public void addEdge (T vertex1, T vertex2);

   /** Removes an edge between two vertices of this graph. */
   public void removeEdge (T vertex1, T vertex2);

   /** Returns true if this graph is empty, false otherwise. */
   public boolean isEmpty();

   /** Returns true if this graph is connected, false otherwise. */
   public boolean isConnected();

   /** Returns the number of vertices in this graph. */
   public int size();

   /** Returns a string representation of the adjacency matrix. */
   public String toString();
}