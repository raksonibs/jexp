public class PQ_Dictionary implements PriorityQueue {
	private int size;
	private int capacity = 5;
    private Entry S[];
	
	public PQ_Dictionary() {
		// TODO Auto-generated constructor stub
		S = new Entry[capacity];
	    size = 0;
	}

	/**
	 * @param 
	 * @return int x
	 */
	public int size() {
		// TODO Auto-generated method stub
		return size;
	}

	/**
	 * @param
	 * @return Entry x
	 */
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return size == 0;
	}

	/**
	 * @param 
	 * @return Entry x
	 */
	public Entry min() throws EmptyPriorityQueueException {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * @param int key, Object value
	 * @return Entry x
	 */
	public Entry insert(int key, Object value) throws InvalidKeyException {
		Entry temp = new Entry(key, value);

	      int i = 0;
	      while(i < S.length) {
	        Entry t = (Entry) S[i];
//	        if (t.compareTo(temp) == -1) {
	            i++;
//	        } else {
//	            int j = i;
//	            S[j + 1] = S[j];
//	            j++;
//	        }

	       }
	       S[i] = (Entry) temp;
	       size++;

	       return temp;
	}

	@Override
	public Entry removeMin() throws EmptyPriorityQueueException {
		// TODO Auto-generated method stub
		return null;
	}

}
